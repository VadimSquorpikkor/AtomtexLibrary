<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="CUnit" script:language="StarBasic">REM  *****  BASIC  *****

rem 	╔═══════════════════════════════════════════════════════════════════════════════╗
rem		║	Класс блоков детектирования для МРП и Портальных мониторов: в отличии		║█
rem		║	от DUnit здесь нет контрольных точек, есть только 5 измерений скорости		║█
rem		║	счета на фоне и от источника. Также для каждого типа БД свой коэффициент 	║█
rem		║	Методы расчета среднего, инициализация блоков и т.д.						║█
rem		╚═══════════════════════════════════════════════════════════════════════════════╝█
rem		  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

Option Compatible
Option ClassModule
Option Explicit

REM --- Internal Variables                                                                           
private _BDnumber As String					rem 452.000 -- номер блока
private _pointBGValue as new Collection		rem 330 -- скорость счета на фоне
private _pointSrcValue as new Collection	rem 10000 -- скорость счета от источника
private _delta as double					rem 110.1 -- дельта
private _bdtype as string					rem &quot;БДКГ-11/1&quot; -- тип блока, как будет написан в протоколе
&apos;&apos;private _MEASUREMENT_NUMBER as integer		rem 5

REM --- CLASS METHODS
public function getDelta	rem 110.1
	getDelta = _delta
end function

public function getType	rem &quot;БДКГ-11/1&quot;
	getType = _bdtype
end function

public function getSerial	rem &quot;452.000&quot;
	getSerial = _BDnumber
end function

public function setSerial(serial as string)	rem &quot;452.000&quot;
	_BDnumber = serial
end function

rem Каждый БД может устанавливаться как в контейнере (со свинцовой защитой), так и без него,
rem соответственно есть два разных набора параметров для каждого блока

private function setBdType(bdName as string, bgRate as double, srcRate as double, delta as double)
	dim i as integer
	_delta = delta 
	for i=1 to 5
		_pointBGValue.add(BgRate)
		_pointSrcValue.add(SrcRate)
	next i
	_bdtype = bdName
end function

&apos;БДКГ-11/1 (для МРП, например)
Public Sub setAsBDKG11
	setBdType(&quot;БДКГ-11/1&quot;, 330, 10000, 110.1)
end sub
&apos;БДКГ-11/1 в контейнере (для портального, например)
Public Sub setAsBDKG11container
	setBdType(&quot;БДКГ-11/1&quot;, 160, 5200, 60.8)
end sub
&apos;БДКГ-19 (для МРП, например)
Public Sub setAsBDKG19
	setBdType(&quot;БДКГ-19&quot;, 660, 13000, 147.8)
end sub
&apos;БДКГ-19 в контейнере (для портального, например)
Public Sub setAsBDKG19container
	setBdType(&quot;БДКГ-19&quot;, 300, 9000, 106.1)
end sub
&apos;БДКГ-35 (для МРП, например)
Public Sub setAsBDKG35
	setBdType(&quot;БДКГ-35&quot;, 400, 9000, 100)
end sub
&apos;БДКГ-35 в контейнере (для портального, например)
Public Sub setAsBDKG35container
	setBdType(&quot;БДКГ-35&quot;, 200, 5000, 55)
end sub

Public Sub setAsBDRM05
	setBdType(&quot;БДРМ-05&quot;, 1700, 13000, 125)
end sub

public function setBGList(measuredBGValue as Collection)
	_pointBGValue = measuredBGValue
end function

public function getBGList as Collection rem 300, 299, ...
	getBGList = _pointBGValue
end function

public function setSrcList(measuredSrcValue as Collection)
	_pointSrcValue = measuredSrcValue
end function

public function getSrcList as Collection rem 9800, 10050, ...
	getSrcList = _pointSrcValue
end function

public function getBgAverage
	dim i as integer
	dim avr as double
	avr = 0
	for i=1 to _pointBGValue.count
		avr = avr + _pointBGValue.item(i)
	next i
	getBgAverage = avr/_pointBGValue.count
end function

public function getSrcAverage
	dim i as integer
	dim avr as double
	avr = 0
	for i=1 to _pointSrcValue.count
		avr = avr + _pointSrcValue.item(i)
	next i
	getSrcAverage = avr/_pointSrcValue.count
end function

public function getSensitivity(activity as double) as double
	getSensitivity = (getSrcAverage - getBgAverage)/activity
end function

</script:module>