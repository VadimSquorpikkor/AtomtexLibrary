<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Activity" script:language="StarBasic">REM  *****  BASIC  *****

&apos; 	╔═══════════════════════════════════════════════════════════════╗
&apos;	║																║█
&apos;	║		АКТИВНОСТЬ ИСТОЧНИКОВ									║█
&apos;	║	_________________________________________________________	║█
&apos;	║																║█
&apos;	║	Методы расчета, константы начальных значений фктивностей, 	║█
&apos;	║	периоды полураспада, даты поверок и т.д.					║█
&apos;	╚═══════════════════════════════════════════════════════════════╝█
&apos;	  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

public const ACT516 as double  = 91.3
public const ACT517 as double  = 88.8
public const ACT518 as double  = 94.6
public const ACT519 as double  = 88.2
public const ACT520 as double  = 91.3
public const ACT521 as double  = 93.5
public const ACT2910 as double = 67.7
public const ACT_all as double = 547.7

&apos;новые значения (почти совпадают, просто для корректировки): на 13.10.21: 483-87Бк, 93-880Бк, 3668-7932Бк, 3663-ЗАХОРОНИЛИ
public const CS_483  as double = 87		&apos;88		&apos;90.1
public const CS_93   as double = 880	&apos;892	&apos;948
public const CS_3668 as double = 7932	&apos;8048	&apos;8232
&apos;public const CS_3663 as double = 0		&apos;82173	&apos;88930
public const CS_tmp_516 as double = 81384		&apos;82173	&apos;88930
&apos;-------------------------------------------------------------
public const BETA_0660 as double  = 96
public const BETA_6905 as double  = 228
public const BETA_0661 as double  = 5591
public const BETA_0662 as double  = 51010
public const BETA_15014 as double = 370348
public const BETA_0663 as double  = 13.1
public const BETA_0664 as double  = 68.8
public const BETA_0665 as double  = 474
public const BETA_0666 as double  = 5801
public const BETA_0667 as double  = 52373
public const BETA_16437 as double = 149288
public const BETA_BG as double    = 11.9
&apos;-------------------------------------------------------------
public const BETA_0660_BQ as double  = 4.23
public const BETA_6905_BQ as double  = 10.1
public const BETA_0661_BQ as double  = 247
public const BETA_0662_BQ as double  = 2253.5
&apos;-------------------------------------------------------------
public const CS_137_HALF_LIFE as double = 365.25 * 30.167
public const SR_90_HALF_LIFE as double  = 365.25 * 28.796 &apos;Стронций-90
public const AM_241_HALF_LIFE as double = 365.25 * 432.6 
&apos;-------------------------------------------------------------
&apos;&apos;&apos;&apos;&apos;public const DISTANCE_DATE as Date = DateSerial (2020,1,1) &apos;&quot;12.12.2020&quot;
&apos;-------------------------------------------------------------
function get_activity(src as double, mdate)
	daysLeft = cdatefromiso(mdate.date) - DateSerial(2016,10,12) &apos;12-го Октября
	get_activity = src * exp(-0.693147/CS_137_HALF_LIFE * daysLeft)
end function
&apos;-------------------------------------------------------------
function get_activity2910(mdate)
	daysLeft = cdatefromiso(mdate.date) - DateSerial(2016,5,17)
	get_activity2910 = act2910 * exp(-0.693147/CS_137_HALF_LIFE * daysLeft)
end function
&apos;-------------------------------------------------------------
function get_activity_Cs137(src as string, mdate)
	dim activity_0 as double
	
	select case src
	case &quot;483&quot;
		activity_0 = CS_483
	case &quot;93&quot;
		activity_0 = CS_93
	case &quot;3668&quot;
		activity_0 = CS_3668
	case &quot;516&quot;
		activity_0 = CS_tmp_516
	end select

	daysLeft = cdatefromiso(mdate.date) - DateSerial(2021,10,13)&apos;13 октября  &apos; DateSerial(2021,03,01) &apos;DateSerial(2019,11,28)
	get_activity_Cs137 = activity_0 * exp(-0.693147/CS_137_HALF_LIFE * daysLeft)
end function
&apos;-------------------------------------------------------------
function get_activity_Sr(src as string, mdate)
	dim activity_0 as double
	dim daysLeft as double
	
	select case src
	case &quot;0660&quot;
		activity_0 = BETA_0660
	case &quot;6905&quot;
		activity_0 = BETA_6905
	case &quot;0661&quot;
		activity_0 = BETA_0661
	case &quot;0662&quot;
		activity_0 = BETA_0662
	case &quot;15014&quot;
		activity_0 = BETA_15014
	case &quot;0663&quot;
		activity_0 = BETA_0663
	case &quot;0664&quot;
		activity_0 = BETA_0664
	case &quot;0665&quot;
		activity_0 = BETA_0665
	case &quot;0666&quot;
		activity_0 = BETA_0666
	case &quot;0667&quot;
		activity_0 = BETA_0667
	case &quot;0663/S&quot;
		activity_0 = BETA_0663 / 2.83
	case &quot;0664/S&quot;
		activity_0 = BETA_0664 / 2.83
	case &quot;0665/S&quot;
		activity_0 = BETA_0665 / 2.83
	case &quot;0666/S&quot;
		activity_0 = BETA_0666 / 2.83
	case &quot;0667/S&quot;
		activity_0 = BETA_0667 / 2.83
	case &quot;0660Bq&quot;
		activity_0 = BETA_0660_BQ
	case &quot;6905Bq&quot;
		activity_0 = BETA_6905_BQ
	case &quot;0661Bq&quot;
		activity_0 = BETA_0661_BQ		
	case &quot;0662Bq&quot;
		activity_0 = BETA_0662_BQ	
	end select

	daysLeft = cdatefromiso(mdate.date) - DateSerial(2019,12,1) rem 1 декабря
	get_activity_Sr = activity_0 * exp(-0.693147/SR_90_HALF_LIFE * daysLeft)
end function
rem----------------------------------------------------------------
&apos;Источники 110: 263 ОНА 9ХК, 430(Am)
&apos;Источники 130: 9ТН УП4 043 К/СГ3 163
function sourceDistanceArray(point as double, prefix as string, bdType as string, mDate)
	dim koef as double
	koefCs = getDistanceKoef(mDate, CS_137_HALF_LIFE)&apos;коэффициент для источников с Цезием-137
	koefAm = getDistanceKoef(mDate, AM_241_HALF_LIFE)&apos;коэффициент для источников с Америцием-241
	dim ar(1) as variant
	&apos;Перерасчет расстояний - 25.1.2021
	ar = Array(&quot;Неизв&quot;,&quot;Неизв&quot;) rem если точка не будет найдена, останется значение по умолчанию -- не найдено
	rem если это гамма блок:
	if bdType = &quot;gamma&quot; then &apos;Мощность амбиентной дозы Н*(10) Зв/ч
		select case prefix
		case &quot;мк&quot;
				if point = 0.03 then ar = dynDistanceAr(&quot;263&quot;, 300.37, koefCs)
				if point = 0.06 then ar = dynDistanceAr(&quot;263&quot;, 213.25, koefCs)
				if point = 0.07 then ar = dynDistanceAr(&quot;263&quot;, 197.58, koefCs)
				if point = 0.24 then ar = dynDistanceAr(&quot;263&quot;, 107.15, koefCs)
				if point = 0.7 	then ar = dynDistanceAr(&quot;0НА&quot;, 232.30, koefCs)
				if point = 0.8  then ar = dynDistanceAr(&quot;0НА&quot;, 217.45, koefCs)
				if point = 7 	then ar = dynDistanceAr(&quot;0НА&quot;, 74.58,  koefCs)
				if point = 70	then ar = dynDistanceAr(&quot;9ХК&quot;, 161.37, koefCs)
				if point = 20 	then ar = dynDistanceAr(&quot;9ХК&quot;, 295.68, koefCs)
				if point = 40 	then ar = dynDistanceAr(&quot;9ХК&quot;, 212.83, koefCs)
				if point = 240 	then ar = dynDistanceAr(&quot;9ХК&quot;, 87.61,  koefCs)
				if point = 700 	then ar = dynDistanceAr(&quot;9ХК&quot;, 51.81,  koefCs)
		case &quot;м&quot;
				if point = 0.5 	then ar = dynDistanceAr(&quot;9ХК&quot;, 61.01,  koefCs)
				if point = 0.7 	then ar = dynDistanceAr(&quot;9ХК&quot;, 51.81,  koefCs)
				if point = 4 	then ar = dynDistanceAr(&quot;043&quot;, 462.21, koefCs)
				if point = 7 	then ar = dynDistanceAr(&quot;043&quot;, 348.90, koefCs)&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;&apos;
				if point = 20 	then ar = dynDistanceAr(&quot;043&quot;, 208.06, koefCs)
				if point = 70 	then ar = dynDistanceAr(&quot;043&quot;, 112.10, koefCs)
				if point = 80 	then ar = dynDistanceAr(&quot;043&quot;, 104.89, koefCs)
				if point = 200 	then ar = dynDistanceAr(&quot;043&quot;, 66.83,  koefCs)
				if point = 400 	then ar = dynDistanceAr(&quot;163&quot;, 305.29, koefCs)
				if point = 800 	then ar = dynDistanceAr(&quot;163&quot;, 216.55, koefCs)
		case &quot;&quot;
				if point = 0.35	then ar = dynDistanceAr(&quot;163&quot;, 326.06, koefCs)
				if point = 0.5 	then ar = dynDistanceAr(&quot;163&quot;, 272.84, koefCs)
				if point = 0.7 	then ar = dynDistanceAr(&quot;163&quot;, 231.28, koefCs)
				if point = 4 	then ar = dynDistanceAr(&quot;163&quot;, 97.78,  koefCs)
				if point = 7 	then ar = dynDistanceAr(&quot;163&quot;, 74.51,  koefCs)
				if point = 8 	then ar = dynDistanceAr(&quot;163&quot;, 69.72,  koefCs)
				if point = 40 	then ar = dynDistanceAr(&quot;163&quot;, 32.25,  koefCs)
		end select
	end if
	if bdType = &quot;gamma-Gy&quot; then &apos;Мощность кермы в воздухе, Ка, Гр/ч
		select case prefix
		case &quot;н&quot;
				if point = 75	then ar = dynDistanceAr(&quot;263&quot;, 174.29, koefCs)
		case &quot;мк&quot;
				if point = 0.03	then ar = dynDistanceAr(&quot;263&quot;, 274.30, koefCs)
				if point = 0.075 then ar= dynDistanceAr(&quot;263&quot;, 174.29, koefCs)
				if point = 0.7	then ar = dynDistanceAr(&quot;0НА&quot;, 212.08, koefCs)
				if point = 0.75	then ar = dynDistanceAr(&quot;0НА&quot;, 204.96, koefCs)
				if point = 7 	then ar = dynDistanceAr(&quot;0НА&quot;, 68.04,  koefCs)
				if point = 7.5 	then ar = dynDistanceAr(&quot;0НА&quot;, 65.74,  koefCs)
				if point = 70 	then ar = dynDistanceAr(&quot;9ХК&quot;, 147.28, koefCs)
				if point = 75 	then ar = dynDistanceAr(&quot;9ХК&quot;, 142.32, koefCs)
		case &quot;м&quot;
				if point = 0.5 	then ar = dynDistanceAr(&quot;9XK&quot;, 55.90,  koefCs)
				if point = 0.7	then ar = dynDistanceAr(&quot;9ХК&quot;, 47.26,  koefCs)				
				if point = 0.75	then ar = dynDistanceAr(&quot;9XK&quot;, 45.66,  koefCs)
				if point = 7	then ar = dynDistanceAr(&quot;9TH&quot;, 52.92,  koefCs)
				if point = 7.5 	then ar = dynDistanceAr(&quot;9TH&quot;, 51.13,  koefCs)
				if point = 70	then ar = dynDistanceAr(&quot;043&quot;, 102.29, koefCs)
				if point = 75 	then ar = dynDistanceAr(&quot;043&quot;, 98.84,  koefCs)
				if point = 200 	then ar = dynDistanceAr(&quot;043&quot;, 60.97,  koefCs)
		case &quot;&quot;
				if point = 0.7	then ar = dynDistanceAr(&quot;163&quot;, 211.21, koefCs)
				if point = 0.75	then ar = dynDistanceAr(&quot;163&quot;, 204.12, koefCs)
				if point = 7	then ar = dynDistanceAr(&quot;163&quot;, 67.99,  koefCs)
				if point = 7.5 	then ar = dynDistanceAr(&quot;163&quot;, 65.69,  koefCs)
				if point = 40 	then ar = dynDistanceAr(&quot;163&quot;, 29.42,  koefCs)
		end select
	end if
	if bdType = &quot;gamma007&quot; then &apos;мощность направленного эквивалента дозы H&apos;(0.07)
		select case prefix
		case &quot;мк&quot;
				if point = 0.07	then ar = dynDistanceAr(&quot;430_3&quot;, 248.17, koefAm)&apos; в SourceCalculation выбрать &quot;Am с экраном&quot; -- 3мм
				if point = 0.7	then ar = dynDistanceAr(&quot;430_3&quot;, 77.25,  koefAm)	&apos; в SourceCalculation выбрать &quot;Am с экраном&quot; -- 3мм
				if point = 7 	then ar = dynDistanceAr(&quot;430&quot;, 165.65,   koefAm)	&apos; без экрана
				if point = 40	then ar = dynDistanceAr(&quot;430&quot;, 69.98,    koefAm)	&apos; без экрана
				if point = 70 	then ar = dynDistanceAr(&quot;430&quot;, 52.61,    koefAm)	&apos; без экрана
		end select
	end if
	if bdType = &quot;gammaHp007&quot; then &apos;мощность индивидуального эквивалента дозы Hp(0.07)
		select case prefix
		case &quot;мк&quot;
				if point = 40	then ar = dynDistanceAr(&quot;430&quot;, 72.58, koefAm)	rem без экрана				
		end select
	end if
	sourceDistanceArray = ar
end function
rem----------------------------------------------------------------
&apos;Метод возвращает расстояние до источника на выбранную дату, 
&apos;по выбранной дате (mdate - это DateField, из которого получается дата), начальному расстоянию до источника и периоду полураспада
&apos;	╔═══════════════════════════════╗
&apos;	║	R = R0 * 2^( -ΔT / 2*Tpol )	║█
&apos;	╚═══════════════════════════════╝█
&apos;	  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
function getDistance(r0 as double, mdate, t_pol)
	dim DISTANCE_DATE as Date
	DISTANCE_DATE = DateSerial (2021,1,25)
	dim daysLeft as double
	daysLeft = cdatefromiso(mdate.date) - DISTANCE_DATE &apos;23-го Января -- день перепроверки расстояний до источников
	
	getDistance = Format(r0 * (2 ^ (-1*( daysleft / (2*t_pol) ))), &quot;0.0&quot;
end function	
rem----------------------------------------------------------------
&apos; В отличии от getDistance возвращает не само расстояние, а коэффициент, на которое нужно домножить R0, чтобы получить R
&apos; Сделан, чтобы не засорять метод sourceDistanceArray, иначе получается длинная строка в кейзе: 
&apos; с getDistance:  if point = 7 	then ar = dynDistanceAr(&quot;043&quot;, 351.3, mDate, CS_137_HALF_LIFE))
&apos; с этим методом: if point = 7 	then ar = dynDistanceAr(&quot;043&quot;, 351.3, koef)
&apos; в методе sourceDistanceArray вызывается в начале и присвается переменной koef
&apos;	╔═══════════════════════════╗
&apos;	║	k = 2^( -ΔT/ 2*Tpol )	║█
&apos;	╚═══════════════════════════╝█
&apos;	  ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
function getDistanceKoef(mdate, t_pol) as double
	dim DISTANCE_DATE as Date
	DISTANCE_DATE = DateSerial (2021,1,25)
	dim daysLeft as double
	dim koef as double
	dim i as integer
	daysLeft = cdatefromiso(mdate.date) - DISTANCE_DATE &apos;23-го Января -- день перепроверки расстояний до источников
	
	koef = 2 ^ (-1.0*( daysleft/(2*t_pol) ) )
	
	getDistanceKoef = koef
end function
rem----------------------------------------------------------------
&apos;Обертка, чтобв сократить строку:
&apos; без обертки:  if point = 7 then ar = Array(&quot;043&quot;, Format(koef*351.3, &quot;0.0&quot;) — и это без замены &quot;,&quot; на &quot;.&quot;
&apos; с оберткой: 	if point = 7 then ar = dynDistanceAr(&quot;043&quot;, 351.3, koef)
function dynDistanceAr(name as string, dist as double, koef as double)
	dim ar(1) as string
	ar(0) = name
	ar(1) = Math.round(dist*koef, 1) &apos;округление до 1 знака после запятой
	ar(1) = Replace (ar(1),&quot;,&quot;,&quot;.&quot;) &apos;345,6 -&gt; 345.6
	ar(1) = Format(ar(1), &quot;0.0&quot;) &apos;68 -&gt; 68.0
	dynDistanceAr = ar
end function
rem----------------------------------------------------------------
&apos;бета источники на 1 марта 2020
&apos;
&apos;Тип	№		Ак,		ПовАк,	ВнешИз,	п/п,	ВнИз 6130
&apos;ист	ист		Бк		Бк/см2	част/с	ч/см2*м	имп/с
&apos;--------------------------------------------------------
&apos;5С0	0663	57.4	0.57	21.7	13.0	
&apos;5С0	0664	303		3.03	114		68.3
&apos;4CO	0660	168		4.20	63.4	95		5.99
&apos;4CO	6905	401		10.0	151		227		14.3
&apos;5CO	0665	2080	20.8	785		471
&apos;5CO	0666	25451	255		9611	5767
&apos;5CO	0661	9835	246		3705	5557	350
&apos;4CO	0662	89569	2239	33803	50705	3194
&apos;4CO	16437	260642	6516	98930	148395
&apos;4CO	15014	654458	16361	245422	368133
&apos;4CO	0667	229594	2296	86765	52059

&apos;Ак - активность
&apos;ПовАк - поверхностная активность
&apos;ВнешИз - внешнее излучение в телесный угол 2пи ср, част/с
&apos;п/п - плотность потока частиц, част/(см2*мин)
&apos;ВнИз 6130 - внешнее излучение в телесный угол 2пи ср с учетом чувствительности дозиметра-радиометра МКС-АТ6130, имп/с


</script:module>